<h2><%= l(:label_search)%></h2>

<div class="box">
  <% form_tag({}, :method => :get) do %>
  <p>
    <%= text_field_tag 'q', @question, :size => 60, :id => 'search-input' %>
    <%= javascript_tag "Field.focus('search-input')" %>
    <%= project_select_tag %>
    <label>
      <%= check_box_tag 'all_words', 1, @all_words %> <%= l(:label_all_words) %>
    </label>
    <label>
      <%= check_box_tag 'titles_only', 1, @titles_only %>
      <%= l(:label_search_titles_only) %>
    </label>
  </p>
  <p>
    <% @object_types.each do |t| %>
    <% logger.debug "DEBUG: object type: " + t.inspect %>
    <label><%= check_box_tag t, 1, @scope.include?(t) %> <%= type_label(t) %></label>
    <% end %>
  </p>

  <% logger.debug "DEBUG: object_types from search: " + Redmine::Search.available_search_types.inspect %>

  <% if @object_types.include?("attachments") %>
    <% Setting.plugin_redmine_xapian['stem_langs'].push(Setting.plugin_redmine_xapian['stemming_lang']) unless Setting.plugin_redmine_xapian['stem_langs'].include?(Setting.plugin_redmine_xapian['stemming_lang']) %>

    <p>
  <% if Setting.plugin_redmine_xapian['stem_on_search'] == "true" %>
    <label>
      <%= content_tag(:label, l(:label_stemming_lang)) %>
      <%= select_tag("user_stem_lang",
                     options_for_select(Setting.plugin_redmine_xapian['stem_langs'],
                                        @user_stem_lang))
      %>
    </label>
    <%= content_tag(:label, l(:label_stemming_strategy)) %>
    <%= radio_button_tag 'user_stem_strategy', 'STEM_NONE', 'STEM_NONE' == @user_stem_strategy %> <%= l(:label_stem_none) %>
    <%= radio_button_tag 'user_stem_strategy', 'STEM_SOME', 'STEM_SOME' == @user_stem_strategy %> <%= l(:label_stem_some) %>
    <%= radio_button_tag 'user_stem_strategy', 'STEM_ALL',  'STEM_ALL' == @user_stem_strategy %> <%= l(:label_stem_all) %>
  <% end %>

  <% end %>
  <p>
    <%= submit_tag l(:button_submit), :name => 'submit' %>
  </p>
  <% end %>
</div>

<% if @results %>
    <div id="search-results-counts">
    <%= render_results_by_type(@results_by_type) unless @scope.size == 1 %>
    </div>
    
    <h3><%= l(:label_result_plural) %> (<%= @results_by_type.values.sum %>)</h3>
    
    <dl id="search-results">
      <% @results.each do |e| %>
        <dt class="<%= e.event_type %>">
          <%= content_tag('span', h(e.project), :class => 'project') unless @project == e.project  %>
        <% if e.event_type == "attachment" %>
        <strong>
        <%= link_to highlight_tokens(truncate(e.event_title, :length => 255), @tokens), e.event_url %>
        </strong>
        <% if e.container_type == "Document" %>
        <%= link_to truncate( l(:label_document)+e.container_name, :length => 255), e.container_url %>
        <% elsif e.container_type == "Message" %>
        <%= link_to truncate( l(:label_message)+e.container_name, :length => 255), e.container_url %>
        <% elsif e.container_type == "WikiPage" %>
        <%= link_to truncate( l(:label_wiki)+e.container_name, :length => 255), e.container_url  %> 
        <% elsif e.container_type == "Issue" %>
        <%= link_to truncate( l(:label_issue)+e.container_name, :length => 255), e.container_url %>
        <% elsif e.container_type == "Article" %>
        <%= link_to truncate( l(:label_article)+e.container_name, :length => 255), e.container_url %>
        <% end %>
        <% else %>
        <%= link_to highlight_tokens(truncate(e.event_title, :length => 255), @tokens), e.event_url %>
        <% end %>
        </dt>
        <dd>
          <span class="description">
          <% if e.event_type == "attachment" %>
            <%= highlight_tokens2(e.event_description, @tokens) %>
          <% else%>
            <%= highlight_tokens(e.event_description, @tokens) %>
          <% end %>
          </span>
          <span class="author"><%= format_time(e.event_datetime) %></span>
        </dd>
      <% end %>
    </dl>
<% end %>

<p>
  <center>
    <% if @pagination_previous_date %>
    <%= link_to_remote ('&#171; ' + l(:label_previous)),
                       {:update => :content,
                        :url => params.merge(:previous => 1, :offset => @pagination_previous_date.strftime("%Y%m%d%H%M%S"))
                       }, :href => url_for(params.merge(:previous => 1, :offset => @pagination_previous_date.strftime("%Y%m%d%H%M%S"))) %>&nbsp;
    <% end %>
    <% if @pagination_next_date %>
    <%= link_to_remote (l(:label_next) + ' &#187;'),
                       {:update => :content,
                        :url => params.merge(:previous => nil, :offset => @pagination_next_date.strftime("%Y%m%d%H%M%S"))
                       }, :href => url_for(params.merge(:previous => nil, :offset => @pagination_next_date.strftime("%Y%m%d%H%M%S"))) %>
    <% end %>
  </center>
</p>

<% html_title(l(:label_search)) -%>
